<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<context:property-placeholder location="classpath:application.properties" />
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
<!-- 	<resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8"/>
	</beans:bean>
	
	<resources mapping="/**" location="/" />
	<context:component-scan base-package="spring.sts.board" />
	<context:component-scan base-package="spring.model.board" /> 
 	<context:component-scan base-package="spring.utility.board" /> 
 	
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="${datasource.driver}" />
		<beans:property name="url" value="${datasource.url}" />
		<beans:property name="username" value="${datasource.username}" />
		<beans:property name="password" value="${datasource.password}" />
	</beans:bean>
	
	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<!-- 스프링에서 트랜잭센을 할려면  아래의 두개의 빈을 생성하여 Autowired를 하면된다 -->
	<beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager"></beans:property>
	</beans:bean>
<!--  트랜잭션 빈     -->


<!-- 스프링에서 큰트핸잭션안(transactionTemplate2)안에 내부트랜잭션이  여러개 있을때 사용 -->
<beans:bean name="transactionTemplate1" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager" />
		<beans:property name="propagationBehavior" value="0"/>
	</beans:bean>
	
	<beans:bean name="transactionTemplate2" class="org.springframework.transaction.support.TransactionTemplate">
		<beans:property name="transactionManager" ref="transactionManager" />
		<beans:property name="propagationBehavior" value="0"/>
	</beans:bean>
	
	<!-- BoardMgr에서 호출하는 dao 멤버변수이름 dao 이거 필요없고 Autowired로 하면 연결됨-->
	<!-- <beans:bean name="boardDao" class="spring.model.board.BoardDAO" >
		<beans:property name="template" ref="template" />
		<beans:property name="transactionTemplate1" ref="transactionTemplate1" />
	</beans:bean> -->
	
	<!-- Controller에서 호출하는 메인트랜잭션 멤버변수명  이거 필요없고 Autowired로 하면 연결됨-->
	<!-- <beans:bean name="boardMgr" class="spring.model.board.BoardMgr" >
		<beans:property name="boardDao" ref="boardDao" />
		<beans:property name="transactionTemplate2" ref="transactionTemplate2" />
	</beans:bean> -->
	
<!--  여기까지-->

	<!-- mybatis 설정파일 아파치 log4j설정방법땀시  root-context로 옴김-->
	<!-- <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations" value="classpath:spring/model/board/mapper/*.xml"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean> -->
	<!-- mybatis 설정마일 끝 -->
	
</beans:beans>
